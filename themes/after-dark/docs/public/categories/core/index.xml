<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <docs>https://blogs.law.harvard.edu/tech/rss</docs>
    <title>Core on After Dark</title>
    <link>http://localhost:1414/categories/core/</link>
    <description>Recent content in Core on After Dark</description>
    <image>
      <title>Core on After Dark</title>
      <link>http://localhost:1414/categories/core/</link>
      <url>https://vhs.codeberg.page/after-dark/images/screenshots/after-dark-v6.15.0-homepage-fs8.png</url>
    </image>
    <ttl>1440</ttl>
    <generator>After Dark 10.3.2 (Hugo 0.123.3)</generator>
    <language>en-US</language>
    <copyright>Copyright &amp;copy; VHS. Licensed under GFDLv1.1 only.</copyright>
    <lastBuildDate>Sun, 25 Feb 2024 09:32:40 UT</lastBuildDate>
    <atom:link href="http://localhost:1414/categories/core/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Extended Builds</title>
      <link>http://localhost:1414/feature/extended-builds/</link>
      <guid>http://localhost:1414/feature/extended-builds/</guid>
      <description>After Dark ships with the ability to build Hugo from tagged-version source. Supply a version tag and let Docker Machine build you a high-performance extended Hugo build with integrated Sass and Go CDK deployment support.
To use install Docker then run the following command:
cd after-dark/docker/hugo &amp;amp;&amp;amp; docker build . Build container uses Alpine and includes musl-dev for high-performance. Update the HUGO_VERSION to get a specific Hugo release built. Upon successful build extract the resulting hugo binary out of the scratch container like:</description>
      <category domain="http://localhost:1414/categories/core">Core</category>
      <content:encoded><![CDATA[After Dark ships with the ability to build Hugo from tagged-version source. Supply a version tag and let Docker Machine build you a high-performance extended Hugo build with integrated Sass and Go CDK deployment support.
To use install Docker then run the following command:
cd after-dark/docker/hugo &amp;amp;&amp;amp; docker build . Build container uses Alpine and includes musl-dev for high-performance. Update the HUGO_VERSION to get a specific Hugo release built. Upon successful build extract the resulting hugo binary out of the scratch container like:
docker create -it --name temp f2b785583ce8 sh &amp;amp;&amp;amp; \ sudo docker cp temp:/usr/local/bin/hugo /usr/local/bin &amp;amp;&amp;amp; \ docker rm -fv temp Where f2b785583ce8 is the scratch container&amp;rsquo;s Image ID and /usr/local/bin is the destination on the host. Place executable in most appropriate directory.
For builds without Sass support enabled turn off CGO_ENABLED, pass in a phony value to BUILD_TAGS, create another build and give it a docker tag:
docker tag $(docker images -q | head -n 1) gohugoio/hugo:v0.61.0 It&amp;rsquo;s recommended at least 2GB of storage space is available when running builds. The resulting binary inside the scratch container is less than 50MB.
]]></content:encoded>
    </item>
    <item>
      <title>Module System</title>
      <link>http://localhost:1414/feature/module-system/</link>
      <guid>http://localhost:1414/feature/module-system/</guid>
      <description>After Dark uses Theme Components and Fetch Injection to provide a plug-in system for enhancing site functionality using optional add-on modules.
View the list of available modules.</description>
      <category domain="http://localhost:1414/categories/core">Core</category>
      <content:encoded><![CDATA[After Dark uses Theme Components and Fetch Injection to provide a plug-in system for enhancing site functionality using optional add-on modules.
View the list of available modules.
]]></content:encoded>
    </item>
    <item>
      <title>Online Help</title>
      <link>http://localhost:1414/feature/online-help/</link>
      <guid>http://localhost:1414/feature/online-help/</guid>
      <description>After Dark includes an extensive online help manual and example website.
View help docs locally by navigating to http://localhost:1414 following a Quick Install or after running the Upgrade Script. Internet connection not required.
If help is not running you may start it anytime via script:
cd flying-toasters &amp;amp;&amp;amp; \ ./themes/after-dark/bin/help Or simply create an alias and serve docs with live-reload:
alias hs=&amp;#39;hugo serve --navigateToChanged&amp;#39; &amp;amp;&amp;amp; \ hs --port 1414 --source themes/after-dark/docs Help is included within the After Dark source code.</description>
      <category domain="http://localhost:1414/categories/core">Core</category>
      <content:encoded><![CDATA[After Dark includes an extensive online help manual and example website.
View help docs locally by navigating to http://localhost:1414 following a Quick Install or after running the Upgrade Script. Internet connection not required.
If help is not running you may start it anytime via script:
cd flying-toasters &amp;amp;&amp;amp; \ ./themes/after-dark/bin/help Or simply create an alias and serve docs with live-reload:
alias hs=&amp;#39;hugo serve --navigateToChanged&amp;#39; &amp;amp;&amp;amp; \ hs --port 1414 --source themes/after-dark/docs Help is included within the After Dark source code. So each new release will include the latest help docs, specific to that particular version.
Upgrade to get the latest updates using the Upgrade Script.
]]></content:encoded>
    </item>
    <item>
      <title>Quick Install</title>
      <link>http://localhost:1414/feature/quick-install/</link>
      <guid>http://localhost:1414/feature/quick-install/</guid>
      <description> wget -qO- https://codeberg.org/vhs/after-dark/raw/branch/trunk/bin/install | sh Run the above command in a terminal emulator after installing Hugo to start a new website in 5-10 seconds. Hugo version 0.51 or greater required.
After Dark includes a portable installation script for quick set-up. Please install Hugo 0.51 or greater before running:
Expand to view script 1#!/usr/bin/env -S sh -euo pipefail 2 3# 4# Copyright (C) 2019, 2023 VHS &amp;lt;vhsdev@tutanota.com&amp;gt; 5# 6# This file is part of After Dark. 7# 8# After Dark is free software: you can redistribute it and/or modify 9# it under the terms of the GNU Affero General Public License as published 10# by the Free Software Foundation, either version 3 of the License, or 11# (at your option) any later version. 12# 13# After Dark is distributed in the hope that it will be useful, 14# but WITHOUT ANY WARRANTY; without even the implied warranty of 15# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 16# GNU Affero General Public License for more details. 17# 18# You should have received a copy of the GNU Affero General Public License 19# along with this program. If not, see &amp;lt;https://www.gnu.org/licenses/&amp;gt;. 20# 21 22vers() { echo &amp;#34;$@&amp;#34; | awk -F. &amp;#39;{ printf(&amp;#34;%d%03d%03d%03d\n&amp;#34;, $1,$2,$3,$4); }&amp;#39;; } 23parse_hugo_vers() { 24 hugovers=$(hugo version | sed &amp;#39;s/-.*//&amp;#39;) 25 hugovers=&amp;#34;${hugovers#&amp;#34;${hugovers%%[0-9]*}&amp;#34;}&amp;#34; 26 HUGO_VERSION=${hugovers} 27} 28 29validate_hugo() { 30 # Exit with error if hugo is not installed 31 if ! hash hugo 2&amp;gt;/dev/null; then 32 echo &amp;#34;Error: After Dark requires Hugo version 0.51 or greater&amp;#34; &amp;gt;&amp;amp;2 33 exit 1 34 fi 35 36 # Exit with error if not minimum required hugo version 37 parse_hugo_vers 38 if [ &amp;#34;$(vers &amp;#34;$HUGO_VERSION&amp;#34;)&amp;#34; -lt &amp;#34;$(vers &amp;#34;0.51&amp;#34;)&amp;#34; ]; then 39 echo &amp;#34;Error: After Dark requires Hugo version 0.51 or greater&amp;#34; 40 exit 1 41 fi 42} 43 44confirm_intent() { 45 while true; do 46 printf &amp;#34;Do you wish to install After Dark? (y/n) &amp;#34; 47 read -r yn &amp;lt;/dev/tty 48 case $yn in 49 [Yy]*) 50 break 51 ;; 52 [Nn]*) exit ;; 53 *) echo &amp;#34;Please answer yes or no.&amp;#34; ;; 54 esac 55 done 56} 57 58set_default_site_name() { 59 SITE_NAME=&amp;#34;Flying Toasters&amp;#34; 60} 61 62prompt_site_name() { 63 printf &amp;#34;Please enter a name for your site: &amp;#34; 64 read -r response &amp;lt;/dev/tty 65 SITE_NAME=&amp;#34;$(echo &amp;#34;$response&amp;#34; | tr -cd &amp;#39;[:alnum:] [:space:]&amp;#39; | tr -s &amp;#39;[:space:]&amp;#39;)&amp;#34; 66 while true; do 67 printf &amp;#34;You entered %s. Is that correct? (y/n) &amp;#34; &amp;#34;\&amp;#34;$SITE_NAME\&amp;#34;&amp;#34; 68 read -r yn &amp;lt;/dev/tty 69 case $yn in 70 [Yy]*) 71 break 72 ;; 73 [Nn]*) 74 prompt_site_name 75 break 76 ;; 77 *) echo &amp;#34;Please answer yes or no.&amp;#34; ;; 78 esac 79 done 80} 81 82format_dir_name() { 83 echo &amp;#34;$1&amp;#34; | tr &amp;#39;[:upper:]&amp;#39; &amp;#39;[:lower:]&amp;#39; | tr &amp;#39; &amp;#39; &amp;#39;-&amp;#39; | tr -cd &amp;#39;[:alnum:]._-&amp;#39; 84} 85 86set_default_install_dir() { 87 SITE_DIR=&amp;#34;$(format_dir_name &amp;#34;$SITE_NAME&amp;#34;)&amp;#34; 88} 89 90prompt_install_dir() { 91 default_dir=&amp;#34;$(format_dir_name &amp;#34;$SITE_NAME&amp;#34;)&amp;#34; 92 printf &amp;#34;Choose an installation directory name (%s): &amp;#34; &amp;#34;$default_dir&amp;#34; 93 read -r response &amp;lt;/dev/tty 94 if [ &amp;#34;$response&amp;#34; = &amp;#34;&amp;#34; ]; then 95 SITE_DIR=$default_dir 96 elif [ &amp;#34;${response%&amp;#34;${response#?}&amp;#34;}&amp;#34; = &amp;#34;/&amp;#34; ]; then 97 echo &amp;#34;Directory name not allowed. Proceeding with default...&amp;#34; 98 SITE_DIR=$default_dir 99 else 100 formatted_input_dir=$(format_dir_name &amp;#34;$response&amp;#34;) 101 if [ &amp;#34;$formatted_input_dir&amp;#34; = &amp;#34;&amp;#34; ]; then 102 echo &amp;#34;Directory name not allowed. Proceeding with default...&amp;#34; 103 SITE_DIR=$default_dir 104 else 105 SITE_DIR=$formatted_input_dir 106 fi 107 fi 108 while true; do 109 printf &amp;#34;Installation directory name set to %s. Is that correct? (y/n) &amp;#34; &amp;#34;\&amp;#34;$SITE_DIR\&amp;#34;&amp;#34; 110 read -r yn &amp;lt;/dev/tty 111 case $yn in 112 [Yy]*) 113 break 114 ;; 115 [Nn]*) 116 prompt_install_dir 117 break 118 ;; 119 *) echo &amp;#34;Please answer yes or no.&amp;#34; ;; 120 esac 121 done 122} 123 124create_site_dir() { 125 SITE_DIR_ABS=&amp;#34;$PWD/$SITE_DIR&amp;#34; 126 mkdir &amp;#34;$SITE_DIR&amp;#34; 127} 128 129create_site() { 130 echo &amp;#34;Creating a new Hugo site ...&amp;#34; 131 hugo new site &amp;#34;$SITE_DIR&amp;#34; 1&amp;gt;/dev/null 132 cd &amp;#34;$SITE_DIR&amp;#34; || exit 1 133} 134 135download_theme() { 136 echo &amp;#34;Downloading the latest version of After Dark ...&amp;#34; 137 LATEST_META=$(wget -qO- https://registry.npmjs.org/after-dark/latest) 138 vers=$(echo &amp;#34;$LATEST_META&amp;#34; | grep -oE &amp;#34;\&amp;#34;version\&amp;#34;.*[^,]*,&amp;#34; | cut -d &amp;#39;,&amp;#39; -f1 | cut -d &amp;#39;:&amp;#39; -f2 | tr -d &amp;#39;&amp;#34; &amp;#39;) 139 mkdir -p themes/after-dark 140 wget -qO- https://registry.npmjs.org/after-dark/-/after-dark-&amp;#34;$vers&amp;#34;.tgz | tar --strip-components=1 -xz -C themes/after-dark 141 echo &amp;#34;Version $vers downloaded to $SITE_DIR/themes/after-dark&amp;#34; 142} 143 144download_module() { 145 [ -z &amp;#34;$1&amp;#34; ] &amp;amp;&amp;amp; { 146 echo &amp;#34;Error: Attempt to download undefined module&amp;#34; &amp;gt;&amp;amp;2 147 exit 1 148 } 149 echo &amp;#34;Downloading $1 module for After Dark ...&amp;#34; 150 meta=$(wget -qO- https://registry.npmjs.org/&amp;#34;$1&amp;#34;/latest) 151 vers=$(echo &amp;#34;$meta&amp;#34; | grep -oE &amp;#34;\&amp;#34;version\&amp;#34;.*[^,]*,&amp;#34; | cut -d &amp;#39;,&amp;#39; -f1 | cut -d &amp;#39;:&amp;#39; -f2 | tr -d &amp;#39;&amp;#34; &amp;#39;) 152 mkdir -p themes/&amp;#34;$1&amp;#34; 153 wget -qO- https://registry.npmjs.org/&amp;#34;$1&amp;#34;/-/&amp;#34;$1&amp;#34;-&amp;#34;$vers&amp;#34;.tgz | tar --strip-components=1 -xz -C themes/&amp;#34;$1&amp;#34; 154 echo &amp;#34;Version $vers downloaded to $SITE_DIR/themes/$1&amp;#34; 155} 156 157configure_theme() { 158 echo &amp;#34;Configuring basic After Dark theme settings ...&amp;#34; 159 configfile=config.toml 160 parse_hugo_vers 161 [ &amp;#34;$(vers &amp;#34;$HUGO_VERSION&amp;#34;)&amp;#34; -ge &amp;#34;$(vers &amp;#34;0.112&amp;#34;)&amp;#34; ] &amp;amp;&amp;amp; configfile=hugo.toml 162 tee &amp;#34;${configfile}&amp;#34; &amp;gt;/dev/null &amp;lt;&amp;lt;TOML 163baseurl = &amp;#34;https://domain.example&amp;#34; # Controls base URL sitewide 164languageCode = &amp;#34;en-US&amp;#34; # Controls site language 165title = &amp;#34;$SITE_NAME&amp;#34; # Homepage title and page title suffix 166paginate = 11 # Number of posts to show before paginating 167copyright = &amp;#34;Copyright &amp;amp;copy; Copyright Owner. Licensed under &amp;lt;a target=\&amp;#34;_blank\&amp;#34; rel=\&amp;#34;external license\&amp;#34; href=\&amp;#34;https://creativecommons.org/licenses/by-nd/4.0/\&amp;#34;&amp;gt;CC BY-ND 4.0&amp;lt;/a&amp;gt;.&amp;#34; # Optional, remove to suppress copyright notices 168 169# Controls default theme and theme components 170theme = [ 171 &amp;#34;fractal-forest&amp;#34;, # OBSD 172 &amp;#34;after-dark&amp;#34; # AGPL-3.0-or-later 173] 174 175disableLiveReload = false # Optional, set true to disable live reload 176enableRobotsTXT = true # Suggested, enable robots.txt file 177sectionPagesMenu = &amp;#34;main&amp;#34; # Enable menu system for lazy bloggers 178 179[markup.goldmark.renderer] 180 unsafe = true # Optional, allows HTML inside your CommonMark content 181[markup.tableOfContents] 182 startLevel = 1 # Suggested, draws TOC using all heading levels 183 endLevel = 6 # Suggested, draws TOC using all heading levels 184[markup.highlight] 185 noClasses = false # Suggested, used for custom syntax highlighting 186 187[params] 188 description = &amp;#34;&amp;#34; # Suggested, controls default description meta 189 author = &amp;#34;&amp;#34; # Optional, controls author name display on posts 190 hide_author = false # Optional, set true to hide author name on posts 191 disable_csp = false # Optional, set true to disable content security policy 192 images = [ 193 &amp;#34;https://source.unsplash.com/collection/983219/2000x1322&amp;#34; 194 ] # Suggested, controls default Open Graph images 195 196[params.layout.menu.main] 197 hidden = true # Optional, set false or remove to show section menu 198 199[params.layout.footer] 200 hidden = false # Optional, set true to hide footer 201 202[params.modules.fractal_forest] 203 enabled = true # Optional, set false to disable module 204 decoders = [&amp;#34;bpgdec8a&amp;#34;] # Optional, 8-bit javascript decoder with animation 205TOML 206} 207 208update_archetypes() { 209 echo &amp;#34;Updating the default content archetype ...&amp;#34; 210 rm -f archetypes/default.md 211 cp themes/after-dark/archetypes/default.md archetypes 212} 213 214create_welcome_post() { 215 echo &amp;#34;Creating welcome post ...&amp;#34; 216 hugo new post/welcome.md 1&amp;gt;/dev/null 217} 218 219serve_site() { 220 echo &amp;#34;Starting site server ...&amp;#34; 221 hugo serve --buildDrafts --navigateToChanged --port 1313 1&amp;gt;/dev/null &amp;amp; 222} 223 224generate_help_docs() { 225 echo &amp;#34;Generating help documentation ...&amp;#34; 226 THEME_PATH=themes/after-dark 227 meta_path=&amp;#34;$THEME_PATH&amp;#34;/data/npm 228 mkdir -p &amp;#34;$meta_path&amp;#34; &amp;amp;&amp;amp; echo &amp;#34;$LATEST_META&amp;#34; | tr &amp;#39;\r\n&amp;#39; &amp;#39; &amp;#39; &amp;gt;&amp;#34;$meta_path&amp;#34;/latest.json 229 cd &amp;#34;$THEME_PATH&amp;#34;/docs &amp;amp;&amp;amp; mkdir themes &amp;amp;&amp;amp; ln -s ../.. &amp;#34;$THEME_PATH&amp;#34; 230 hugo new validate.md --kind validate 1&amp;gt;/dev/null 231} 232 233serve_help() { 234 echo &amp;#34;Starting help server ...&amp;#34; 235 hugo serve --disableLiveReload --port 1414 1&amp;gt;/dev/null &amp;amp; 236} 237 238echo &amp;#34;Welcome to the After Dark quick installer. Press CTRL-C at any time to abort.&amp;#34; 239 240if [ -n &amp;#34;${AFTRDRK_INTERACTIVE_INSTALL-}&amp;#34; ]; then 241 confirm_intent 242fi 243validate_hugo 244if [ -n &amp;#34;${AFTRDRK_INTERACTIVE_INSTALL-}&amp;#34; ]; then 245 prompt_site_name 246 prompt_install_dir 247else 248 set_default_site_name 249 set_default_install_dir 250fi 251create_site_dir 252create_site 253download_theme 254update_archetypes 255download_module &amp;#34;fractal-forest&amp;#34; 256configure_theme 257create_welcome_post 258serve_site 259generate_help_docs 260serve_help 261 262lime_yellow=$(tput setaf 190) 263normal=$(tput sgr0) 264 265printf &amp;#39;%sInstallation successful!%s\n&amp;#39; &amp;#34;${lime_yellow}&amp;#34; &amp;#34;${normal}&amp;#34; 266echo &amp;#34;Site created in $SITE_DIR_ABS&amp;#34; 267echo &amp;#34;Site server started at http://localhost:1313/&amp;#34; 268echo &amp;#34;To stop it run \&amp;#34;kill \$(ps aux | awk &amp;#39;/[h]ugo.*1313/ {print \$2}&amp;#39;)\&amp;#34;.&amp;#34; 269echo &amp;#34;Help server started at http://localhost:1414/&amp;#34; 270echo &amp;#34;To stop and restart it run \&amp;#34;./themes/after-dark/bin/help\&amp;#34;.&amp;#34; 271echo &amp;#34;Thank you for choosing After Dark.&amp;#34; </description>
      <category domain="http://localhost:1414/categories/core">Core</category>
      <content:encoded><![CDATA[ wget -qO- https://codeberg.org/vhs/after-dark/raw/branch/trunk/bin/install | sh Run the above command in a terminal emulator after installing Hugo to start a new website in 5-10 seconds. Hugo version 0.51 or greater required.
After Dark includes a portable installation script for quick set-up. Please install Hugo 0.51 or greater before running:
Expand to view script 1#!/usr/bin/env -S sh -euo pipefail 2 3# 4# Copyright (C) 2019, 2023 VHS &amp;lt;vhsdev@tutanota.com&amp;gt; 5# 6# This file is part of After Dark. 7# 8# After Dark is free software: you can redistribute it and/or modify 9# it under the terms of the GNU Affero General Public License as published 10# by the Free Software Foundation, either version 3 of the License, or 11# (at your option) any later version. 12# 13# After Dark is distributed in the hope that it will be useful, 14# but WITHOUT ANY WARRANTY; without even the implied warranty of 15# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 16# GNU Affero General Public License for more details. 17# 18# You should have received a copy of the GNU Affero General Public License 19# along with this program. If not, see &amp;lt;https://www.gnu.org/licenses/&amp;gt;. 20# 21 22vers() { echo &amp;#34;$@&amp;#34; | awk -F. &amp;#39;{ printf(&amp;#34;%d%03d%03d%03d\n&amp;#34;, $1,$2,$3,$4); }&amp;#39;; } 23parse_hugo_vers() { 24 hugovers=$(hugo version | sed &amp;#39;s/-.*//&amp;#39;) 25 hugovers=&amp;#34;${hugovers#&amp;#34;${hugovers%%[0-9]*}&amp;#34;}&amp;#34; 26 HUGO_VERSION=${hugovers} 27} 28 29validate_hugo() { 30 # Exit with error if hugo is not installed 31 if ! hash hugo 2&amp;gt;/dev/null; then 32 echo &amp;#34;Error: After Dark requires Hugo version 0.51 or greater&amp;#34; &amp;gt;&amp;amp;2 33 exit 1 34 fi 35 36 # Exit with error if not minimum required hugo version 37 parse_hugo_vers 38 if [ &amp;#34;$(vers &amp;#34;$HUGO_VERSION&amp;#34;)&amp;#34; -lt &amp;#34;$(vers &amp;#34;0.51&amp;#34;)&amp;#34; ]; then 39 echo &amp;#34;Error: After Dark requires Hugo version 0.51 or greater&amp;#34; 40 exit 1 41 fi 42} 43 44confirm_intent() { 45 while true; do 46 printf &amp;#34;Do you wish to install After Dark? (y/n) &amp;#34; 47 read -r yn &amp;lt;/dev/tty 48 case $yn in 49 [Yy]*) 50 break 51 ;; 52 [Nn]*) exit ;; 53 *) echo &amp;#34;Please answer yes or no.&amp;#34; ;; 54 esac 55 done 56} 57 58set_default_site_name() { 59 SITE_NAME=&amp;#34;Flying Toasters&amp;#34; 60} 61 62prompt_site_name() { 63 printf &amp;#34;Please enter a name for your site: &amp;#34; 64 read -r response &amp;lt;/dev/tty 65 SITE_NAME=&amp;#34;$(echo &amp;#34;$response&amp;#34; | tr -cd &amp;#39;[:alnum:] [:space:]&amp;#39; | tr -s &amp;#39;[:space:]&amp;#39;)&amp;#34; 66 while true; do 67 printf &amp;#34;You entered %s. Is that correct? (y/n) &amp;#34; &amp;#34;\&amp;#34;$SITE_NAME\&amp;#34;&amp;#34; 68 read -r yn &amp;lt;/dev/tty 69 case $yn in 70 [Yy]*) 71 break 72 ;; 73 [Nn]*) 74 prompt_site_name 75 break 76 ;; 77 *) echo &amp;#34;Please answer yes or no.&amp;#34; ;; 78 esac 79 done 80} 81 82format_dir_name() { 83 echo &amp;#34;$1&amp;#34; | tr &amp;#39;[:upper:]&amp;#39; &amp;#39;[:lower:]&amp;#39; | tr &amp;#39; &amp;#39; &amp;#39;-&amp;#39; | tr -cd &amp;#39;[:alnum:]._-&amp;#39; 84} 85 86set_default_install_dir() { 87 SITE_DIR=&amp;#34;$(format_dir_name &amp;#34;$SITE_NAME&amp;#34;)&amp;#34; 88} 89 90prompt_install_dir() { 91 default_dir=&amp;#34;$(format_dir_name &amp;#34;$SITE_NAME&amp;#34;)&amp;#34; 92 printf &amp;#34;Choose an installation directory name (%s): &amp;#34; &amp;#34;$default_dir&amp;#34; 93 read -r response &amp;lt;/dev/tty 94 if [ &amp;#34;$response&amp;#34; = &amp;#34;&amp;#34; ]; then 95 SITE_DIR=$default_dir 96 elif [ &amp;#34;${response%&amp;#34;${response#?}&amp;#34;}&amp;#34; = &amp;#34;/&amp;#34; ]; then 97 echo &amp;#34;Directory name not allowed. Proceeding with default...&amp;#34; 98 SITE_DIR=$default_dir 99 else 100 formatted_input_dir=$(format_dir_name &amp;#34;$response&amp;#34;) 101 if [ &amp;#34;$formatted_input_dir&amp;#34; = &amp;#34;&amp;#34; ]; then 102 echo &amp;#34;Directory name not allowed. Proceeding with default...&amp;#34; 103 SITE_DIR=$default_dir 104 else 105 SITE_DIR=$formatted_input_dir 106 fi 107 fi 108 while true; do 109 printf &amp;#34;Installation directory name set to %s. Is that correct? (y/n) &amp;#34; &amp;#34;\&amp;#34;$SITE_DIR\&amp;#34;&amp;#34; 110 read -r yn &amp;lt;/dev/tty 111 case $yn in 112 [Yy]*) 113 break 114 ;; 115 [Nn]*) 116 prompt_install_dir 117 break 118 ;; 119 *) echo &amp;#34;Please answer yes or no.&amp;#34; ;; 120 esac 121 done 122} 123 124create_site_dir() { 125 SITE_DIR_ABS=&amp;#34;$PWD/$SITE_DIR&amp;#34; 126 mkdir &amp;#34;$SITE_DIR&amp;#34; 127} 128 129create_site() { 130 echo &amp;#34;Creating a new Hugo site ...&amp;#34; 131 hugo new site &amp;#34;$SITE_DIR&amp;#34; 1&amp;gt;/dev/null 132 cd &amp;#34;$SITE_DIR&amp;#34; || exit 1 133} 134 135download_theme() { 136 echo &amp;#34;Downloading the latest version of After Dark ...&amp;#34; 137 LATEST_META=$(wget -qO- https://registry.npmjs.org/after-dark/latest) 138 vers=$(echo &amp;#34;$LATEST_META&amp;#34; | grep -oE &amp;#34;\&amp;#34;version\&amp;#34;.*[^,]*,&amp;#34; | cut -d &amp;#39;,&amp;#39; -f1 | cut -d &amp;#39;:&amp;#39; -f2 | tr -d &amp;#39;&amp;#34; &amp;#39;) 139 mkdir -p themes/after-dark 140 wget -qO- https://registry.npmjs.org/after-dark/-/after-dark-&amp;#34;$vers&amp;#34;.tgz | tar --strip-components=1 -xz -C themes/after-dark 141 echo &amp;#34;Version $vers downloaded to $SITE_DIR/themes/after-dark&amp;#34; 142} 143 144download_module() { 145 [ -z &amp;#34;$1&amp;#34; ] &amp;amp;&amp;amp; { 146 echo &amp;#34;Error: Attempt to download undefined module&amp;#34; &amp;gt;&amp;amp;2 147 exit 1 148 } 149 echo &amp;#34;Downloading $1 module for After Dark ...&amp;#34; 150 meta=$(wget -qO- https://registry.npmjs.org/&amp;#34;$1&amp;#34;/latest) 151 vers=$(echo &amp;#34;$meta&amp;#34; | grep -oE &amp;#34;\&amp;#34;version\&amp;#34;.*[^,]*,&amp;#34; | cut -d &amp;#39;,&amp;#39; -f1 | cut -d &amp;#39;:&amp;#39; -f2 | tr -d &amp;#39;&amp;#34; &amp;#39;) 152 mkdir -p themes/&amp;#34;$1&amp;#34; 153 wget -qO- https://registry.npmjs.org/&amp;#34;$1&amp;#34;/-/&amp;#34;$1&amp;#34;-&amp;#34;$vers&amp;#34;.tgz | tar --strip-components=1 -xz -C themes/&amp;#34;$1&amp;#34; 154 echo &amp;#34;Version $vers downloaded to $SITE_DIR/themes/$1&amp;#34; 155} 156 157configure_theme() { 158 echo &amp;#34;Configuring basic After Dark theme settings ...&amp;#34; 159 configfile=config.toml 160 parse_hugo_vers 161 [ &amp;#34;$(vers &amp;#34;$HUGO_VERSION&amp;#34;)&amp;#34; -ge &amp;#34;$(vers &amp;#34;0.112&amp;#34;)&amp;#34; ] &amp;amp;&amp;amp; configfile=hugo.toml 162 tee &amp;#34;${configfile}&amp;#34; &amp;gt;/dev/null &amp;lt;&amp;lt;TOML 163baseurl = &amp;#34;https://domain.example&amp;#34; # Controls base URL sitewide 164languageCode = &amp;#34;en-US&amp;#34; # Controls site language 165title = &amp;#34;$SITE_NAME&amp;#34; # Homepage title and page title suffix 166paginate = 11 # Number of posts to show before paginating 167copyright = &amp;#34;Copyright &amp;amp;copy; Copyright Owner. Licensed under &amp;lt;a target=\&amp;#34;_blank\&amp;#34; rel=\&amp;#34;external license\&amp;#34; href=\&amp;#34;https://creativecommons.org/licenses/by-nd/4.0/\&amp;#34;&amp;gt;CC BY-ND 4.0&amp;lt;/a&amp;gt;.&amp;#34; # Optional, remove to suppress copyright notices 168 169# Controls default theme and theme components 170theme = [ 171 &amp;#34;fractal-forest&amp;#34;, # OBSD 172 &amp;#34;after-dark&amp;#34; # AGPL-3.0-or-later 173] 174 175disableLiveReload = false # Optional, set true to disable live reload 176enableRobotsTXT = true # Suggested, enable robots.txt file 177sectionPagesMenu = &amp;#34;main&amp;#34; # Enable menu system for lazy bloggers 178 179[markup.goldmark.renderer] 180 unsafe = true # Optional, allows HTML inside your CommonMark content 181[markup.tableOfContents] 182 startLevel = 1 # Suggested, draws TOC using all heading levels 183 endLevel = 6 # Suggested, draws TOC using all heading levels 184[markup.highlight] 185 noClasses = false # Suggested, used for custom syntax highlighting 186 187[params] 188 description = &amp;#34;&amp;#34; # Suggested, controls default description meta 189 author = &amp;#34;&amp;#34; # Optional, controls author name display on posts 190 hide_author = false # Optional, set true to hide author name on posts 191 disable_csp = false # Optional, set true to disable content security policy 192 images = [ 193 &amp;#34;https://source.unsplash.com/collection/983219/2000x1322&amp;#34; 194 ] # Suggested, controls default Open Graph images 195 196[params.layout.menu.main] 197 hidden = true # Optional, set false or remove to show section menu 198 199[params.layout.footer] 200 hidden = false # Optional, set true to hide footer 201 202[params.modules.fractal_forest] 203 enabled = true # Optional, set false to disable module 204 decoders = [&amp;#34;bpgdec8a&amp;#34;] # Optional, 8-bit javascript decoder with animation 205TOML 206} 207 208update_archetypes() { 209 echo &amp;#34;Updating the default content archetype ...&amp;#34; 210 rm -f archetypes/default.md 211 cp themes/after-dark/archetypes/default.md archetypes 212} 213 214create_welcome_post() { 215 echo &amp;#34;Creating welcome post ...&amp;#34; 216 hugo new post/welcome.md 1&amp;gt;/dev/null 217} 218 219serve_site() { 220 echo &amp;#34;Starting site server ...&amp;#34; 221 hugo serve --buildDrafts --navigateToChanged --port 1313 1&amp;gt;/dev/null &amp;amp; 222} 223 224generate_help_docs() { 225 echo &amp;#34;Generating help documentation ...&amp;#34; 226 THEME_PATH=themes/after-dark 227 meta_path=&amp;#34;$THEME_PATH&amp;#34;/data/npm 228 mkdir -p &amp;#34;$meta_path&amp;#34; &amp;amp;&amp;amp; echo &amp;#34;$LATEST_META&amp;#34; | tr &amp;#39;\r\n&amp;#39; &amp;#39; &amp;#39; &amp;gt;&amp;#34;$meta_path&amp;#34;/latest.json 229 cd &amp;#34;$THEME_PATH&amp;#34;/docs &amp;amp;&amp;amp; mkdir themes &amp;amp;&amp;amp; ln -s ../.. &amp;#34;$THEME_PATH&amp;#34; 230 hugo new validate.md --kind validate 1&amp;gt;/dev/null 231} 232 233serve_help() { 234 echo &amp;#34;Starting help server ...&amp;#34; 235 hugo serve --disableLiveReload --port 1414 1&amp;gt;/dev/null &amp;amp; 236} 237 238echo &amp;#34;Welcome to the After Dark quick installer. Press CTRL-C at any time to abort.&amp;#34; 239 240if [ -n &amp;#34;${AFTRDRK_INTERACTIVE_INSTALL-}&amp;#34; ]; then 241 confirm_intent 242fi 243validate_hugo 244if [ -n &amp;#34;${AFTRDRK_INTERACTIVE_INSTALL-}&amp;#34; ]; then 245 prompt_site_name 246 prompt_install_dir 247else 248 set_default_site_name 249 set_default_install_dir 250fi 251create_site_dir 252create_site 253download_theme 254update_archetypes 255download_module &amp;#34;fractal-forest&amp;#34; 256configure_theme 257create_welcome_post 258serve_site 259generate_help_docs 260serve_help 261 262lime_yellow=$(tput setaf 190) 263normal=$(tput sgr0) 264 265printf &amp;#39;%sInstallation successful!%s\n&amp;#39; &amp;#34;${lime_yellow}&amp;#34; &amp;#34;${normal}&amp;#34; 266echo &amp;#34;Site created in $SITE_DIR_ABS&amp;#34; 267echo &amp;#34;Site server started at http://localhost:1313/&amp;#34; 268echo &amp;#34;To stop it run \&amp;#34;kill \$(ps aux | awk &amp;#39;/[h]ugo.*1313/ {print \$2}&amp;#39;)\&amp;#34;.&amp;#34; 269echo &amp;#34;Help server started at http://localhost:1414/&amp;#34; 270echo &amp;#34;To stop and restart it run \&amp;#34;./themes/after-dark/bin/help\&amp;#34;.&amp;#34; 271echo &amp;#34;Thank you for choosing After Dark.&amp;#34; Script has been tested on GNU/Linux, BSD (Darwin) and Windows via Cmder.
Warning: Examine scripts downloaded from the Internet before running them. Here are three methods for downloading and running:
Download and pipe to sh directly:
wget -qO- https://codeberg.org/vhs/after-dark/raw/branch/trunk/bin/install | sh Download into new file, chmod and execute:
curl -O https://cdn.jsdelivr.net/npm/after-dark@latest/bin/install &amp;amp;&amp;amp; \ chmod &#43;x install &amp;amp;&amp;amp; ./install From canonical git clone:
# clone source and change to source directory git clone https://codeberg.org/vhs/after-dark.git &amp;amp;&amp;amp; cd &amp;#34;$_&amp;#34; # use npm cli to get the release hash echo &amp;#34;${$(npm run integrity)#*sha512-}&amp;#34; # run quick install after validating ./bin/install Script should complete in 5-10 seconds resulting in a sample site and help docs:
After Dark Quick Install running to completion in Terminal on Deepin Manjaro. Your new site will be called flying-toasters. Change it to the name of your project anytime you like. Access site by navigating to https://localhost:1313.
Multi-site Configuration (Advanced) After Dark enables multi-site management from a single installation. To manage multiple websites use the -c and -d flags to specify the content and destination directories, respectively.
For example, to generate an audio site using the current After Dark installation create an executable script to generate the site:
flying-toasters/bin/gen-audio-site #!/bin/sh hugo -c sites/audio -d public/static.domain.example Where audio contains the content for that site:
├── layouts ├── sites │ └── audio │ ├── audiobooks │ │ ├── gaining-currency.md │ │ └── the-power-of-now.md │ └── clips │ └── war-of-the-worlds.md ├── static And public contains a folder for each site:
public └── static.domain.example ├── categories │ └── index.xml ├── audiobooks │ └── index.html ├── clips │ └── index.html ├── css ├── index.html ├── index.xml ├── js ├── sitemap.xml └── tags └── index.xml And create another script to serve the content for editing:
flying-toasters/bin/serve-audio-site #!/bin/sh hugo -c sites/audio Each subdirectory of public then becomes an independent, deployable website and exact copy save for destination content generated.
Tip: For additional flexibility type hugo --help and modify your scripts using the --theme and --config flags. Multi-site is perfect for maintaining a consistent look-and-feel across multiple domain origins while limiting the need to run the Upgrade Script for each site.
]]></content:encoded>
    </item>
    <item>
      <title>Upgrade Script</title>
      <link>http://localhost:1414/feature/upgrade-script/</link>
      <guid>http://localhost:1414/feature/upgrade-script/</guid>
      <description>To check for updates and automatically upgrade After Dark to the latest version simply run the upgrade script from your site directory:
cd flying toasters &amp;amp;&amp;amp; \ ./themes/after-dark/bin/upgrade If you&amp;rsquo;re already using the latest version the script will let you know:
Did not upgrade after-dark. Already using latest version. If an update is available the script will download and install it automatically:
Starting upgrade from 6.7.6 to 6.8.0 ...
Version 6.</description>
      <category domain="http://localhost:1414/categories/core">Core</category>
      <content:encoded><![CDATA[To check for updates and automatically upgrade After Dark to the latest version simply run the upgrade script from your site directory:
cd flying toasters &amp;amp;&amp;amp; \ ./themes/after-dark/bin/upgrade If you&amp;rsquo;re already using the latest version the script will let you know:
Did not upgrade after-dark. Already using latest version. If an update is available the script will download and install it automatically:
Starting upgrade from 6.7.6 to 6.8.0 ...
Version 6.8.0 downloaded to themes/after-dark
Stopping help server if running ... Generating help documentation ...
Upgrade complete! Please see CHANGELOG.md for changes. If current version can&amp;rsquo;t be detected the script will prompt you:
Cannot detect version. Upgrade after-dark anyway (y/n)? y
Starting upgrade from unknown version to 6.12.1 ...
Version 6.12.1 downloaded to themes/after-dark
Stopping help server if running ... Generating help documentation ...
Upgrade complete! Please see CHANGELOG.md for changes. Like Quick Install the upgrade script is written to POSIX standard will not require additional dependencies to operate on most systems. Upon upgrade the Release Hash will update as well so you may Validate Release.
]]></content:encoded>
    </item>
  </channel>
</rss>
